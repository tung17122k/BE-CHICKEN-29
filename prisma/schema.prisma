// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int     @id @default(autoincrement())
  email            String  @unique @db.VarChar(255)
  name             String?
  password         String? @db.VarChar(255)
  address          String? @db.VarChar(255)
  phone            String? @db.VarChar(20)
  isVerified       Boolean @default(false)
  verificationCode String? @db.VarChar(6)
  accountType      String? @db.VarChar(50)
  role             Role    @relation(fields: [roleId], references: [id])
  roleId           Int
  cart             Cart?

  @@map("users")
}

model Role {
  id          Int    @id @default(autoincrement())
  name        String @unique @db.VarChar(100)
  description String @db.VarChar(255)
  users       User[]

  @@map("roles")
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  price       Int
  image       String?      @db.VarChar(255)
  description String       @db.MediumText
  quantity    Int
  sold        Int          @default(0)
  categoryId  Int
  category    Category     @relation(fields: [categoryId], references: [id])
  // cartDetail  CartDetail[]
  // OrderDetail OrderDetail[]
  cartDetail  CartDetail[]

  @@map("products")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(255)
  description String    @db.MediumText
  product     Product[]

  @@map("categories")
}

model Cart {
  id          Int          @id @default(autoincrement())
  userId      Int          @unique
  sum         Int
  cartDetails CartDetail[]
  user        User         @relation(fields: [userId], references: [id])

  @@map("carts")
}

model CartDetail {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int
  price     Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@index([cartId], map: "cart_detail_cartId_fkey")
  @@index([productId], map: "cart_detail_productId_fkey")
  @@map("cart_detail")
}
